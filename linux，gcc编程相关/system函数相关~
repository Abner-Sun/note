system函数 

windows操作系统下system () 函数详解 
函数名: system 
功   能: 发出一个DOS命令 
用   法: int system(char *command); 
system函数已经被收录在标准c库中，可以直接调用  
程序例: 
#include <stdlib.h> 
#include <stdio.h> 
int main(void) 
{ 
printf("About to spawn command.com and run a DOS command\n"); 
system("dir"); 
return 0; 
} 



linux操作系统下system () 函数详解 
（执行shell 命令）
相关函数
       fork，execve，waitpid，popen
表头文件
       ＃i nclude<stdlib.h>
定义函数
       int system(const char * string);
函数说明
       system()会调用fork()产生子进程，由子进程来调用/bin/sh-c string来执行参数string字符串所代表的命令，此命>令执行完后随即返回原调用的进程。在调用system()期间SIGCHLD 信号会被暂时搁置，SIGINT和SIGQUIT 信号则会被忽略。
返回值
   =-1:出现错误 
   =0:调用成功但是没有出现子进程 
   >0:成功退出的子进程的id
       如果system()在调用/bin/sh时失败则返回127，其他失败原因返回-1。若参数string为空指针(NULL)，则返回非零值>。如果system()调用成功则最后会返回执行shell命令后的返回值，但是此返回值也有可能为 system()调用/bin/sh失败所返回的127，因此最好能再检查errno 来确认执行成功。
附加说明
       在编写具有SUID/SGID权限的程序时请勿使用system()，system()会继承环境变量，通过环境变量可能会造成系统安全的问题。

范例
＃i nclude<stdlib.h>
main()
{
system(“ls -al /etc/passwd /etc/shadow”);
}
执行结果：
-rw-r--r-- 1 root root 705 Sep 3 13 :52 /etc/passwd
-r--------- 1 root root 572 Sep 2 15 :34 /etc/shado
例2：
char tmp[];
sprintf(tmp,"/bin/mount -t vfat %s /mnt/usb",dev);
system(tmp);
其中dev是/dev/sda1.
--------------------------------------------------------------------------------------------------
/*----------------------------------------------------------------------------*/
system("pause") 和getchar()有什么区别呢 ？

system("pause") 是调用WINDOWS CONSOLE APP下的命令 PAUSE的。 
system("const char*")就是调用WINDOWS CONSOLE APP下的命令。 
比如system("exit"); 
system("ping 192.168.0.1")等等 

而getchar()只是C标准库里等待一个字符的函数，两者区别很大。

/*---------------------------------------------------*/
如何使system("pause") 不弹出“按任意键继续”这几个字呢？
用system("pause>nul"):就可以了
------------------------------------------------------------------------------------------------------------
system函数 是可以调用一些DOS命令,比如 
system("cls");//清屏,等于在DOS上使用cls命令 
