哈佛结构是一种将程序指令存储和数据存储分开的存储器结构。
哈佛结构
一种并行体系结构，它的主要特点是将程序和数据存储在不同的存储空间中，即程序存储器和数据存储器是两个独立的存储器，每个存储器独立编址、独立访问。与两个存储器相对应的是系统的4条总线：程序的数据总线与地址总线，数据的数据总线与地址总线。这种分离的程序总线和数据总线可允许在一个机器周期内同时获得指令字（来自程序存储器）和操作数（来自数据存储器），从而提高了执行速度，提高了数据的吞吐率。又由于程序和数据存储在两个分开的物理空间中，因此取址和执行能完全重叠。中央处理器首先到程序指令存储器中读取程序指令内容，解码后得到数据地址，再到相应的数据存储器中读取数据，并进行下一步的操作（通常是执行）。程序指令存储和数据存储分开，可以使指令和数据有不同的数据宽度。
哈佛结构的计算机由CPU、程序存储器和数据存储器组成，程序存储器和数据存储器采用不同的总线，从而提供了较大的存储器带宽，使数据的移动和交换更加方便，尤其提供了较高的数字信号处理性能。

